{"version":3,"sources":["Shared/Components/Context/Auth-context.js","Shared/Components/Utility/LoadingSpinner.js","Shared/Components/Utility/Backdrop/Backdrop.js","Shared/hooks/Auth-Hook.js","Shared/Components/Header/MainHeader.js","Shared/Components/Header/NavLinks.js","Shared/Components/Header/SideDrawer.js","Shared/Components/Header/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","logout","login","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","timeOut","MainHeader","children","NavLinks","authCtx","useContext","to","exact","SideDrawer","CSSTransition","classNames","in","show","mountOnEnter","unmountOnExit","timeout","MainNavigation","useState","isDrawerOpen","setDrawerOpen","drawerCloseHandler","useAuth","expirationDate","setExpirationDate","setToken","setUserId","loginHandler","useCallback","console","log","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","exipration","toISOString","useEffect","storedData","parse","getItem","logoutHandler","removeItem","remainingTime","setTimeout","clearTimeout","Users","React","lazy","Auth","UpdatePlaces","Places","NewPlace","App","routes","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.c5609efb.chunk.js","sourcesContent":["\r\n\r\nimport { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId:null,\r\n  token:null,\r\n  logout: () => {},\r\n  login: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet timeOut;\r\nconst useAuth = () => {\r\n  const [expirationDate, setExpirationDate] = useState();\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const loginHandler = useCallback((userId, token, expirationDate) => {\r\n    console.log(\"logged in\");\r\n    setUserId(userId);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1 * 60 * 60 * 1000);\r\n    setExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: userId,\r\n        token: token,\r\n        exipration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n    setToken(token);\r\n  }, []);\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.exipration) > new Date()\r\n    ) {\r\n      loginHandler(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.exipration)\r\n      );\r\n    }\r\n  }, [loginHandler]);\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setUserId(null);\r\n    setToken(null);\r\n    setExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && expirationDate) {\r\n      let remainingTime = expirationDate.getTime() - new Date().getTime(); //milisecond conversion\r\n      timeOut = setTimeout(logoutHandler, remainingTime);\r\n    } else {\r\n      clearTimeout(timeOut);\r\n    }\r\n  }, [token, logoutHandler, expirationDate]);\r\n\r\n  return {\r\n    token,\r\n    userId,\r\n    loginHandler,\r\n    logoutHandler,\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import React from \"react\";\r\nimport \"./MainHeader.css\"\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">\r\n    {props.children}\r\n  </header>\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/Auth-context\";\r\nconst NavLinks = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          All Users\r\n        </NavLink>\r\n      </li>\r\n      {authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${authCtx.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n      )}\r\n      {authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">New place</NavLink>\r\n        </li>\r\n      )}\r\n      {!authCtx.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">Authenticate</NavLink>\r\n        </li>\r\n      )}\r\n      {authCtx.isLoggedIn && <button onClick={authCtx.logout}>LOGOUT</button>}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./SideDrawer.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst SideDrawer = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <CSSTransition classNames=\"side-in-left\" in={props.show} mountOnEnter unmountOnExit timeout={200}>\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>,\r\n    document.getElementById(\"side-drawer\")\r\n  );\r\n  //   return <aside className=\"side-drawer\">{props.children}</aside>;\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport \"./MainNavigation.css\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport { useState } from \"react\";\r\nimport BackDrop from \"../Utility/Backdrop/Backdrop\";\r\nconst MainNavigation = (props) => {\r\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const drawerOpenHandler = () => {\r\n    setDrawerOpen(true);\r\n  };\r\n  const drawerCloseHandler = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {isDrawerOpen && <BackDrop onClick={drawerCloseHandler}></BackDrop>}\r\n\r\n      <SideDrawer\r\n        className=\"main-navigation__drawer-nav\"\r\n        show={isDrawerOpen}\r\n        onClick={drawerCloseHandler}\r\n      >\r\n        <NavLinks></NavLinks>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={drawerOpenHandler}\r\n        >\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Travel Diaries</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks></NavLinks>\r\n        </nav>\r\n      </MainHeader>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\nimport { Suspense } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n// import NewPlace from \"./Places/Pages/NewPlace\";\n// import Places from \"./Places/Pages/Places\";\n// import UpdatePlaces from \"./Places/Pages/UpdatePlace\";\nimport MainNavigation from \"./Shared/Components/Header/MainNavigation\";\n// import Auth from \"./Users/Pages/Auth\";\n// import Users from \"./Users/Pages/users\";\nimport { AuthContext } from \"./Shared/Components/Context/Auth-context\";\nimport useAuth from \"./Shared/hooks/Auth-Hook\";\nimport LoadingSpinner from \"./Shared/Components/Utility/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./Users/Pages/users\"));\nconst Auth = React.lazy(() => import(\"./Users/Pages/Auth\"));\nconst UpdatePlaces = React.lazy(() => import(\"./Places/Pages/UpdatePlace\"));\nconst Places = React.lazy(() => import(\"./Places/Pages/Places\"));\nconst NewPlace = React.lazy(() => import(\"./Places/Pages/NewPlace\"));\nfunction App() {\n  const { token, userId, loginHandler, logoutHandler } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users></Users>\n        </Route>\n        <Route path=\"/places\" exact>\n          <Places></Places>\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <Places></Places>\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace></NewPlace>\n        </Route>\n        <Route path=\"/places/:uid\" exact>\n          <UpdatePlaces></UpdatePlaces>\n        </Route>\n\n        <Redirect to=\"/\"></Redirect>\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users></Users>\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <Places></Places>\n        </Route>\n        <Route path=\"/places\" exact>\n          <Places></Places>\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth></Auth>\n        </Route>\n        <Redirect to=\"/auth\"></Redirect>\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        userId,\n        isLoggedIn: !!token,\n        logout: logoutHandler,\n        login: loginHandler,\n        token: token,\n      }}\n    >\n      <BrowserRouter>\n        <MainNavigation></MainNavigation>\n        <main>\n          <Suspense fallback={<LoadingSpinner></LoadingSpinner>}>\n            {routes}\n          </Suspense>\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}