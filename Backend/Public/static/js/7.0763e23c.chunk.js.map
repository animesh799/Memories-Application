{"version":3,"sources":["Shared/Components/Utility/Card/Card.js","Users/Pages/Auth.js"],"names":["Card","props","className","style","children","Auth","authCtx","useContext","AuthContext","useState","showSignupMode","setSignupMode","useForm","email","value","isValid","password","formState","inputChangeHandler","setFormData","useHttp","sendRequest","isLoading","error","onCancelHandler","submitHandler","event","preventDefault","console","log","input","process","JSON","stringify","responseData","login","userId","token","formdata","FormData","append","username","image","Fragment","onClear","asOverlay","onSubmit","validators","VALIDATOR_REQUIRE","type","placeholder","id","element","onInput","errorText","label","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","formIsValid","inverse","onClick","undefined","prevState"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,4/MC0JEC,UAhJF,WACX,IAAMC,EAAUC,qBAAWC,KAE3B,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAqDC,YACnD,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,SAAU,CACRF,MAAO,GACPC,SAAS,KAGb,GAXF,mBAAOE,EAAP,KAAkBC,EAAlB,KAAsCC,EAAtC,KAcA,EAA2DC,cAAnDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,MAAOC,EAAvC,EAAuCA,gBA6BjCC,EAAa,uCAAG,WAAOC,GAAP,8EACpBA,EAAMC,iBACNC,QAAQC,IAAIZ,EAAUa,OAEjBpB,EAJe,0CAMWW,EAAYU,yDAErC,OACAC,KAAKC,UAAU,CACbpB,MAAOI,EAAUa,MAAMjB,MAAMC,MAC7BE,SAAUC,EAAUa,MAAMd,SAASF,QAErC,CACE,eAAgB,qBAdJ,OAMVoB,EANU,OAkBhB5B,EAAQ6B,MAAMD,EAAaE,OAAQF,EAAaG,OAlBhC,oGAsBVC,EAAW,IAAIC,UACZC,OAAO,WAAYvB,EAAUa,MAAMW,SAAS3B,OACrDwB,EAASE,OAAO,QAASvB,EAAUa,MAAMjB,MAAMC,OAC/CwB,EAASE,OAAO,WAAYvB,EAAUa,MAAMd,SAASF,OACrDwB,EAASE,OAAO,QAASvB,EAAUa,MAAMY,MAAM5B,OA1B/B,UA2BWO,EAAYU,0DAErC,OACAO,GA9Bc,QA2BVJ,EA3BU,OAgChB5B,EAAQ6B,MAAMD,EAAaE,OAAQF,EAAaG,OAhChC,qHAAH,sDAqCnB,OACE,kBAAC,IAAMM,SAAP,KACE,kBAAC,IAAD,CAAYpB,MAAOA,EAAOqB,QAASpB,IACnC,kBAAC,IAAD,CAAMtB,UAAU,kBACboB,GAAa,kBAAC,IAAD,CAAgBuB,WAAS,IACvC,4BAAKnC,EAAiB,WAAa,kBACnC,6BACA,0BAAMoC,SAAUrB,GACbf,GACC,kBAAC,IAAD,CACEqC,WAAY,CAACC,eACbC,KAAK,OACLC,YAAY,WACZC,GAAG,WACHC,QAAQ,QACRC,QAASnC,EACToC,UAAU,8BACVC,MAAM,aAGT7C,GACC,kBAAC,IAAD,CACE4C,UAAU,+BACVH,GAAG,QACHK,QAAM,EACNH,QAASnC,IAGb,kBAAC,IAAD,CACE6B,WAAY,CAACU,cAAmBT,eAChCC,KAAK,QACLC,YAAY,aACZC,GAAG,QACHC,QAAQ,QACRC,QAASnC,EACToC,UAAU,2BACVC,MAAM,WAER,kBAAC,IAAD,CACER,WAAY,CAACW,YAAoB,GAAIV,eACrCC,KAAK,WACLC,YAAY,gBACZC,GAAG,WACHC,QAAQ,QACRC,QAASnC,EACToC,UAAU,8CACVC,MAAM,aAER,kBAAC,IAAD,CAAQN,KAAK,SAASU,UAAW1C,EAAU2C,aACxClD,EAAiB,UAAY,SAEhC,kBAAC,IAAD,CAAQmD,SAAO,EAACC,QApHO,WACxBpD,EAgBHS,EAAY,2BAELF,EAAUa,OAFN,IAGPW,cAAUsB,EACVrB,WAAOqB,IAET9C,EAAUa,MAAMjB,MAAME,SAAWE,EAAUa,MAAMd,SAASD,SArB5DI,EAAY,2BAELF,EAAUa,OAFN,IAGPW,SAAU,CACR3B,MAAO,GACPC,SAAS,GAEX2B,MAAO,CACL5B,MAAO,KACPC,SAAS,MAGb,GAYJJ,GAAc,SAACqD,GAAD,OAAgBA,MA0FyBf,KAAK,UAAtD,aACcvC,EAA6B,QAAZ","file":"static/js/7.0763e23c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\r\nimport Input from \"../../Shared/FormElements/Input\";\r\nimport { useForm } from \"../../Shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../Shared/Components/Context/Auth-context\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../Shared/Components/utils/validators\";\r\nimport Button from \"../../Shared/FormElements/Button\";\r\nimport Card from \"../../Shared/Components/Utility/Card/Card\";\r\nimport ErrorModal from \"../../Shared/Components/Utility/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/Utility/LoadingSpinner\";\r\nimport useHttp from \"../../Shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../Shared/FormElements/ImageUpload\";\r\nconst Auth = () => {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [showSignupMode, setSignupMode] = useState(false);\r\n  const [formState, inputChangeHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const { sendRequest, isLoading, error, onCancelHandler } = useHttp();\r\n  const authStateChangeHandler = () => {\r\n    if (!showSignupMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.input,\r\n          username: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.input,\r\n          username: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.input.email.isValid && formState.input.password.isValid\r\n      );\r\n    }\r\n    setSignupMode((prevState) => !prevState);\r\n  };\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState.input);\r\n\r\n    if (!showSignupMode) {\r\n      try {\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_ADDRESS+\r\n          \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.input.email.value,\r\n            password: formState.input.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        authCtx.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formdata = new FormData();\r\n        formdata.append(\"username\", formState.input.username.value);\r\n        formdata.append(\"email\", formState.input.email.value);\r\n        formdata.append(\"password\", formState.input.password.value);\r\n        formdata.append(\"image\", formState.input.image.value);\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_ADDRESS+\r\n          \"/users/signup\",\r\n          \"POST\",\r\n          formdata\r\n        );\r\n        authCtx.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={onCancelHandler} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>{showSignupMode ? \"SIGN-UP \" : \"Login Required\"}</h2>\r\n        <hr></hr>\r\n        <form onSubmit={submitHandler}>\r\n          {showSignupMode && (\r\n            <Input\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              id=\"username\"\r\n              element=\"input\"\r\n              onInput={inputChangeHandler}\r\n              errorText=\"Please enter valid Username\"\r\n              label=\"Username\"\r\n            ></Input>\r\n          )}\r\n          {showSignupMode && (\r\n            <ImageUpload\r\n              errorText=\"Please pick valid image file\"\r\n              id=\"image\"\r\n              center\r\n              onInput={inputChangeHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n            type=\"email\"\r\n            placeholder=\"your email\"\r\n            id=\"email\"\r\n            element=\"input\"\r\n            onInput={inputChangeHandler}\r\n            errorText=\"Please enter valid email\"\r\n            label=\"E-mail\"\r\n          ></Input>\r\n          <Input\r\n            validators={[VALIDATOR_MINLENGTH(6), VALIDATOR_REQUIRE()]}\r\n            type=\"password\"\r\n            placeholder=\"your password\"\r\n            id=\"password\"\r\n            element=\"input\"\r\n            onInput={inputChangeHandler}\r\n            errorText=\"Please enter valid Password,min 6 character\"\r\n            label=\"Password\"\r\n          ></Input>\r\n          <Button type=\"submit\" disabled={!formState.formIsValid}>\r\n            {showSignupMode ? \"SIGN-UP\" : \"LOGIN\"}\r\n          </Button>\r\n          <Button inverse onClick={authStateChangeHandler} type=\"button\">\r\n            SWITCH TO {!showSignupMode ? \"SIGN-UP\" : \"LOGIN\"}\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}